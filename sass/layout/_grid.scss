.row {
    margin: 0 auto; // Centers a block element inside of another block element.  
    max-width: $grid-width; // If smaller than 114rem, take up 100% of VP.
    // Everything except the last child.
    &:not(:last-child) {
        margin-bottom: $gutter-vert;
    }
    .col-1-of-2 {
        /* Performs mathematical operations; can mix units.*/
        // Full width, subtract 1 gutter (on page once), and divide by 2.
        width: calc((100% - #{$gutter-horiz}) / 2); 
    }
    .col-1-of-3 {
        // Full width, subtract 2 times the gutter (in row 2 times), and divide by 3 (col-3).
        width: calc((100% - 2 * #{$gutter-horiz}) / 3); 
    }
    .col-2-of-3 {
        // Two (2-of-3) times the 1-of-3 calculations, PLUS the horizontal gutter.
        width: calc(2 * ((100% - 2 * #{$gutter-horiz}) / 3) + #{$gutter-horiz}); 
    }
    .col-1-of-4 {
        // Full width, subtract 3 times the gutter (in row 3 times), and divide by 4 (col-4). 
        width: calc((100% - 3 * #{$gutter-horiz}) / 4); 
    }
    .col-2-of-4 {
        // Two (2-of-4) times the 1-of-4 calculations, PLUS the horizontal gutter.
        width: calc(2 * ((100% - 3 * #{$gutter-horiz}) / 4) + #{$gutter-horiz}); 
    }
    .col-3-of-4 {
        // Three (3-of-4) times the 1-of-4 calculations, PLUS the horizontal gutter.
        width: calc(3 * ((100% - 3 * #{$gutter-horiz}) / 4) + 2 * #{$gutter-horiz}); 
    }
    // Include the _mixin.scss selector property that sets a clearfix for the floats.
    @include clearfix;
    /* Attribute selector: Use square brackets [ ]. The ^ denotes 'starts with', * denotes 
    'contains', $ denotes 'ends with'. Selects all columns at once without needing a special 
    class/id assigned to them. */
    [class^="col-"] {
        float: left;
        &:not(:last-child) {
            margin-right: $gutter-horiz;
        }
    }
}