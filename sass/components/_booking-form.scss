.form {
    &__group:not(:last-child) {
        margin-bottom: 2rem;
    }
    &__input {
        background-color: rgba($color-white, .5);
        border: none;
        border-bottom: 3px solid transparent; // Stops the visual 3px jump when focusing an input field.
        border-radius: 2px;
        color: inherit;
        display: block;
        font-family: inherit; // Makes the font inherit from the body.
        font-size: 1.5rem; 
        padding: 1.5rem 2rem;
        transition: all .3s;
        width: 90%;
        &:focus {
            outline: none; // Removes the default blue outline around the input fields. 
            border-bottom: 3px solid $color-primary;
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
            // Pseudoclass for input field "required" state.
            &:invalid {
                border-bottom: 3px solid $color-danger-red;
            }
        }
        // Currently only works on Safari and Chrome. 
        // Double :: represents things that are actually on the webpage. 
        // Single : represent states, such as focus, hover, or active. 
        &::-webkit-input-placeholder {
            color: $color-grey-2;
        }       
    }
    // Hides the label until text is typed into the input field. 
    // ~ is the general sibling selector.
    // + is the adjacent sibling selector. 
    &__input:placeholder-shown + &__label {
        opacity: 0;
        transform: translateY(-4rem);
        visibility: hidden; // Used with opacity because can't animate visibility
    } 
    &__label {
        display: block;
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        transition: all .3s;
    }
    &__radio-group {
        display: inline-block;
        width: 45%;
    }
    &__radio-input {
        display: none;  // Hides the default radio buttons in lieu of the custom ones.  
    }
    &__radio-label {
        cursor: pointer;
        font-size: $default-font;
        padding-left: 4rem;
        position: relative; // Needed for child __radio-button to use position: absolute; Must be specified (absolute/relative).
    }
    &__radio-button {
        border: 5px solid $color-primary;
        border-radius: 50%; // Makes the border round. 
        display: inline-block; // Makes it round, as well. 
        height: 3rem; 
        left: 0;
        position: absolute; // Puts it in the exact position we want it to be; can also be absolute when using absolute in child. 
        top: -.4rem;
        width: 3rem;
        // Creates new element, essentially; the 'after' pseudoclass. 
        &::after {
            @include absoluteCenter;
            background-color: $color-primary;
            border-radius: 50%;
            content: ""; // Always required when using the after pseudoclass. 
            display: block;
            height: 1.3rem;
            opacity: 0;
            transition: opacity .2s; // Targets only the opacity transition below. 
            width: 1.3rem;
        }
    }
    // When the label/radio is checked, select the sibling's child. Same logic for this applies to checkboxes. 
    &__radio-input:checked ~ &__radio-label &__radio-button::after  { // Targets the sibling child element of the checked radio button. 
        opacity: 1; // Targeted by transition above. 
    }
}